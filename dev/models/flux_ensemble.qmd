---
format: 
  commonmark:
    variant: -raw_html
    wrap: none
    self-contained: true
crossref:
  fig-prefix: Figure
  tbl-prefix: Table
bibliography: https://raw.githubusercontent.com/pat-alt/bib/main/bib.bib
output: asis
execute: 
  echo: true
  eval: false
jupyter: julia-1.7
---

```{julia}
#| echo: false
using Pkg; Pkg.activate("docs")
using Flux, Random, Plots, PlotThemes, CounterfactualExplanations, EvoTrees
theme(:wong)
using Logging
disable_logging(Logging.Info)
include("dev/utils.jl") # some plotting functions
www_path = "docs/src/models/www"
```

## Data

```{julia}
# Number of points to generate.
N = 80
M = round(Int, N / 4)
Random.seed!(1234)

xs, ys = toy_data_non_linear(N)
X = hcat(xs...)
counterfactual_data = CounterfactualData(X,ys')
```

## Model

```{julia}
ensemble = build_ensemble(5;kw=(dropout=true,activation=Flux.Ïƒ))
M_ = FluxEnsemble(ensemble)
```

```{julia}
plt = plot(M, counterfactual_data)
savefig(plt, joinpath(www_path, "flux_ensemble_model.png"))
```

![](www/flux_ensemble_model.png)

## Counterfactuals

```{julia}
using Random
Random.seed!(123)
x = select_factual(counterfactual_data, rand(1:size(X)[2]))
y = round(probs(M, x)[1])
target = ifelse(y==1.0,0.0,1.0) # opposite label as target
```

```{julia}
# Define generator:
generator = GenericGenerator()
# Generate recourse:
counterfactual = generate_counterfactual(x, target, counterfactual_data, M, generator)
```